@model BookBase.Models.Author



<div class="animated fadeIn">
    @using (Ajax.BeginForm("Create", null, new AjaxOptions { LoadingElementId = "preloader", OnFailure = "AuthorCreateFailed()" }, new { @id = "form" }))
    {
        @Html.AntiForgeryToken()

        <h4>Dodaj nowego Autora</h4>
        <br />
        <br />
        @Html.ValidationSummary(true, "", new { @class = "form-error" })
        <div class="row">
            <div class="input-field col s12">
                @Html.LabelFor(model => model.Name, new { @class = "active form-label" })
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "form-error" })
            </div>
        </div>
        <div class="button-section">
            <input type="submit" value="Dodaj" class="btn light-green" />
            @Ajax.ActionLink("Powrót do listy", "Index", "Author", null, new AjaxOptions
       {
           HttpMethod = "GET",
           InsertionMode = InsertionMode.Replace,
           UpdateTargetId = "content",
           LoadingElementId = "preloader",
       }, new { @class = "waves-effect waves-light btn grey darken-1", })
        </div>
    }
</div>

<script>

    function AuthorCreateSuccesful() {
        AuthorCreatedToast();
        $.ajax({
            url: "@Url.Action("Index", "Author")",
            success: function (data) {
                $("#content").html(data);
                $("#preloader").css("display", "none");
            }
        })
    }


</script>

<script src="~/scripts/scripts.js"></script>