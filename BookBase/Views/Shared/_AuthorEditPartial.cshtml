@model BookBase.Models.Author

<div class="animated fadeIn">
    @using (Ajax.BeginForm("Edit", null, new AjaxOptions { LoadingElementId = "preloader", OnSuccess = "AuthorChangedToast()" }, new { @id = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Edycja Autora: <strong>@Model.Name</strong></h4>
            <br />
            <br />
            @Html.ValidationSummary(true, "", new { @class = "form-error" })
            @Html.HiddenFor(model => model.Id)

            <div class="row">
                <div class="input-field col s12">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "active" })
                    @Html.EditorFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "form-error" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Zapisz" class="btn btn-default" />
                    @Ajax.ActionLink("Powrót do listy", "Index", "Author", null, new AjaxOptions
               {
                   HttpMethod = "GET",
                   InsertionMode = InsertionMode.Replace,
                   UpdateTargetId = "content",
                   LoadingElementId = "preloader",
               }, new { @class = "waves-effect waves-light btn grey darken-1", })
                </div>
            </div>
        </div>
    }
</div>

<script>

    function AuthorChangedToast() {
        Materialize.toast("<span class=\"toast-info\"><strong>Zapisano zmiany w autorze</strong> <br /> @Model.Name </span>", 3000);
    }

    function AuthorUpdateSuccesful() {
        $.ajax({
            url: "@Url.Action("Index", "Author")",
            success: function (data) {
                $("#content").html(data);
                $("#preloader").css("display", "none");
            }
        })
    }
</script>