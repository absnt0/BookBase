@model BookBase.Models.Book

<div class="row animated fadeIn">
    @using (Ajax.BeginForm("Edit", null, new AjaxOptions { LoadingElementId = "preloader", OnSuccess = "BookChangedToast()" }, new { @id = "form", @class = "col s12" }))
    {
        @Html.AntiForgeryToken()

        <h4><strong>Edycja książki:</strong>  <small>@Model.Title</small></h4>
        <div class="row">
            <div class="input-field col s12">
                @Html.ValidationSummary(true, "", new { @class = "form-error" })
                @Html.HiddenFor(model => model.Id)
            </div>
        </div>

        <div class="row">
            <div class="input-field col s12">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "active" })
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "form-error" })
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                @Html.LabelFor(model => model.DateOfRelease, htmlAttributes: new { @class = "active" })
                @Html.TextBoxFor(model => model.DateOfRelease, "{0:dd.MM.yyyy}",
               new
               {
                   @placeholder = "Wybierz datę",
                   @class = "datepicker",
                   data_val_required = "Pole data jest wymagane.",
                   data_val_date = "Pole Data Wydania musi być datą. (Format: dd/mm/yyyy)"
               })
                @Html.ValidationMessageFor(model => model.DateOfRelease, "", new { @class = "form-error" })
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "active" })
                @Html.EditorFor(model => model.ISBN)
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "form-error" })
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                @Html.LabelFor(model => model.Author.Name, "Autor", htmlAttributes: new { @class = "active" })
                @Html.EditorFor(model => model.Author.Name)
                @Html.ValidationMessageFor(model => model.Author.Name, "", new { @class = "form-error" })
            </div>
        </div>

        <div class="row">
            <div class="input-field col s12">
                <input type="submit" value="Zapisz" class="btn btn-default" id="save" />
                @Ajax.ActionLink("Powrót do listy", "Index", "Book", null, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "content",
               LoadingElementId = "preloader",
           }, new { @class = "waves-effect waves-light btn grey darken-1", })
            </div>
        </div>
    }

</div>

<script>
    function BookChangedToast() {
        Materialize.toast("<span class=\"toast-info\"><strong>Zapisano zmiany w książce</strong> <br /> @Model.Title </span>", 3000);
    }

    function BookUpdateSuccesful() {
        $.ajax({
            url: "@Url.Action("Index", "Book")",
            success: function (data) {
                $("#content").html(data);
                $("#preloader").css("display", "none");
            }
        })
    }
</script>
<script src="~/scripts/scripts.js"></script>
